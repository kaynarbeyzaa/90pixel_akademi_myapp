{"version":3,"sources":["../../../src/basic/SwipeRow.js"],"names":["PREVIEW_OPEN_DELAY","PREVIEW_CLOSE_DELAY","SwipeRow","props","horizontalSwipeGestureBegan","swipeInitialX","parentScrollEnabled","ranPreview","state","dimensionsSet","hiddenHeight","hiddenWidth","_translateX","Animated","Value","_panResponder","PanResponder","create","onMoveShouldSetPanResponder","e","gs","handleOnMoveShouldSetPanResponder","onPanResponderMove","handlePanResponderMove","onPanResponderRelease","handlePanResponderEnd","onPanResponderTerminate","onShouldBlockNativeResponder","toValue","delay","timing","duration","previewDuration","setState","recalculateHiddenLayout","nativeEvent","layout","height","width","preview","previewOpenValue","rightOpenValue","getPreviewAnimation","start","dx","Math","abs","directionalDistanceChangeThreshold","gestureState","dy","absDx","absDy","setScrollEnabled","_value","swipeGestureBegan","newDX","disableLeftSwipe","disableRightSwipe","stopLeftSwipe","stopRightSwipe","setValue","leftOpenValue","swipeToOpenPercent","manuallySwipeRow","spring","friction","tension","onRowDidClose","onRowDidOpen","onRowClose","onRowOpen","panHandlers","transform","translateX","zIndex","list","style","body","backgroundColor","onContentLayout","undefined","styles","hidden","flex","flexDirection","justifyContent","left","right","renderMainContent","Component","defaultProps","closeOnRowPress","container","bottom","overflow","position","top","StyledSwipeRow","mapPropsToStyleNames"],"mappings":"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","file":"SwipeRow.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Animated, PanResponder, Platform, StyleSheet, TouchableOpacity, View } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport { Text } from \"./Text\";\nimport { Left } from \"./Left\";\nimport { Right } from \"./Right\";\nimport { Body } from \"./Body\";\nimport { ListItem } from \"./ListItem\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nconst PREVIEW_OPEN_DELAY = 700;\nconst PREVIEW_CLOSE_DELAY = 300;\n\nclass SwipeRow extends Component {\n  static defaultProps = {\n    leftOpenValue: 0,\n    rightOpenValue: 0,\n    closeOnRowPress: true,\n    disableLeftSwipe: false,\n    disableRightSwipe: false,\n    recalculateHiddenLayout: false,\n    preview: false,\n    previewDuration: 300,\n    directionalDistanceChangeThreshold: 2,\n    swipeToOpenPercent: 50,\n  };\n  constructor(props) {\n    super(props);\n    this.horizontalSwipeGestureBegan = false;\n    this.swipeInitialX = null;\n    this.parentScrollEnabled = true;\n    this.ranPreview = false;\n    this.state = {\n      dimensionsSet: false,\n      hiddenHeight: 0,\n      hiddenWidth: 0,\n    };\n    this._translateX = new Animated.Value(0);\n  }\n\n  componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponder: (e, gs) => this.handleOnMoveShouldSetPanResponder(e, gs),\n      onPanResponderMove: (e, gs) => this.handlePanResponderMove(e, gs),\n      onPanResponderRelease: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onPanResponderTerminate: (e, gs) => this.handlePanResponderEnd(e, gs),\n      onShouldBlockNativeResponder: _ => false,\n    });\n  }\n\n  getPreviewAnimation(toValue, delay) {\n    return Animated.timing(this._translateX, { duration: this.props.previewDuration, toValue, delay });\n  }\n\n  onContentLayout(e) {\n    this.setState({\n      dimensionsSet: !this.props.recalculateHiddenLayout,\n      hiddenHeight: e.nativeEvent.layout.height,\n      hiddenWidth: e.nativeEvent.layout.width,\n    });\n\n    if (this.props.preview && !this.ranPreview) {\n      this.ranPreview = true;\n      let previewOpenValue = this.props.previewOpenValue || this.props.rightOpenValue * 0.5;\n      this.getPreviewAnimation(previewOpenValue, PREVIEW_OPEN_DELAY).start(_ => {\n        this.getPreviewAnimation(0, PREVIEW_CLOSE_DELAY).start();\n      });\n    }\n  }\n\n  handleOnMoveShouldSetPanResponder(e, gs) {\n    const { dx } = gs;\n    return Math.abs(dx) > this.props.directionalDistanceChangeThreshold;\n  }\n\n  handlePanResponderMove(e, gestureState) {\n    const { dx, dy } = gestureState;\n    const absDx = Math.abs(dx);\n    const absDy = Math.abs(dy);\n\n\t\t// this check may not be necessary because we don't capture the move until we pass the threshold\n\t\t// just being extra safe here\n    if (\n\t\t\tabsDx > this.props.directionalDistanceChangeThreshold ||\n\t\t\tabsDy > this.props.directionalDistanceChangeThreshold\n\t\t) {\n\t\t\t// we have enough to determine direction\n      if (absDy > absDx && !this.horizontalSwipeGestureBegan) {\n\t\t\t\t// user is moving vertically, do nothing, listView will handle\n        return;\n      }\n\n\t\t\t// user is moving horizontally\n      if (this.parentScrollEnabled) {\n\t\t\t\t// disable scrolling on the listView parent\n        this.parentScrollEnabled = false;\n        this.props.setScrollEnabled && this.props.setScrollEnabled(false);\n      }\n\n      if (this.swipeInitialX === null) {\n\t\t\t\t// set tranlateX value when user started swiping\n        this.swipeInitialX = this._translateX._value;\n      }\n      if (!this.horizontalSwipeGestureBegan) {\n        this.horizontalSwipeGestureBegan = true;\n        this.props.swipeGestureBegan && this.props.swipeGestureBegan();\n      }\n\n      let newDX = this.swipeInitialX + dx;\n      if (this.props.disableLeftSwipe && newDX < 0) {\n        newDX = 0;\n      }\n      if (this.props.disableRightSwipe && newDX > 0) {\n        newDX = 0;\n      }\n\n      if (this.props.stopLeftSwipe && newDX > this.props.stopLeftSwipe) {\n        newDX = this.props.stopLeftSwipe;\n      }\n      if (this.props.stopRightSwipe && newDX < this.props.stopRightSwipe) {\n        newDX = this.props.stopRightSwipe;\n      }\n\n      this._translateX.setValue(newDX);\n    }\n  }\n\n  handlePanResponderEnd(e, gestureState) {\n\t\t// re-enable scrolling on listView parent\n    if (!this.parentScrollEnabled) {\n      this.parentScrollEnabled = true;\n      this.props.setScrollEnabled && this.props.setScrollEnabled(true);\n    }\n\n\t\t// finish up the animation\n    let toValue = 0;\n    if (this._translateX._value >= 0) {\n\t\t\t// trying to open right\n      if (this._translateX._value > this.props.leftOpenValue * (this.props.swipeToOpenPercent / 100)) {\n\t\t\t\t// we're more than halfway\n        toValue = this.props.leftOpenValue;\n      }\n    } else {\n\t\t\t// trying to open left\n      if (this._translateX._value < this.props.rightOpenValue * (this.props.swipeToOpenPercent / 100)) {\n\t\t\t\t// we're more than halfway\n        toValue = this.props.rightOpenValue;\n      }\n    }\n\n    this.manuallySwipeRow(toValue);\n  }\n\n\t/*\n\t * This method is called by SwipeListView\n\t */\n  closeRow() {\n    this.manuallySwipeRow(0);\n  }\n\n\topenLeftRow() {\n\t\tthis.manuallySwipeRow(this.props.leftOpenValue);\n\t}\n\n\topenRightRow() {\n\t\tthis.manuallySwipeRow(this.props.rightOpenValue);\n\t}\n\n\tmanuallySwipeRow(toValue) {\n\t\tAnimated.spring(this._translateX, {\n\t\t\ttoValue,\n\t\t\tfriction: this.props.friction,\n\t\t\ttension: this.props.tension,\n\t\t}).start(_ => {\n\t\t\tif (toValue === 0) {\n\t\t\t\tthis.props.onRowDidClose && this.props.onRowDidClose();\n\t\t\t} else {\n\t\t\t\tthis.props.onRowDidOpen && this.props.onRowDidOpen();\n\t\t\t}\n\t\t});\n\n    if (toValue === 0) {\n      this.props.onRowClose && this.props.onRowClose();\n    } else {\n      this.props.onRowOpen && this.props.onRowOpen(toValue);\n    }\n\n\t\t// reset everything\n    this.swipeInitialX = null;\n    this.horizontalSwipeGestureBegan = false;\n  }\n\n  renderMainContent() {\n\t\t// We do this annoying if statement for performance.\n\t\t// We don't want the onLayout func to run after it runs once.\n    if (this.state.dimensionsSet) {\n      return (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tstyle={{\n  transform: [{ translateX: this._translateX }],\n  zIndex: 2,\n}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n      );\n    } else {\n      return (\n\t\t\t\t<Animated.View\n\t\t\t\t\t{...this._panResponder.panHandlers}\n\t\t\t\t\tonLayout={e => this.onContentLayout(e)}\n\t\t\t\t\tstyle={{\n  transform: [{ translateX: this._translateX }],\n  zIndex: 2,\n}}\n\t\t\t\t>\n\t\t\t\t\t{!this.props.list\n\t\t\t\t\t\t? <ListItem list style={this.props.style}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</ListItem>\n\t\t\t\t\t\t: <View style={[{ backgroundColor: '#FFF' },this.props.style]}>\n\t\t\t\t\t\t\t\t{this.props.body}\n\t\t\t\t\t\t\t</View>}\n\t\t\t\t</Animated.View>\n      );\n    }\n  }\n\n  render() {\n    return (\n\t\t\t<View style={this.props.style ? this.props.style : undefined}>\n\t\t\t\t<View\n\t\t\t\t\tstyle={[\n  styles.hidden,\n  {\n    height: this.state.hiddenHeight,\n    flex:1,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n]}\n\t\t\t\t>\n\t\t\t\t\t<Left style={{ width: this.props.leftOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.left}\n\t\t\t\t\t</Left>\n\t\t\t\t\t<Body style={{ flex: 0 }} />\n\t\t\t\t\t<Right style={{ width: -this.props.rightOpenValue, zIndex: 1 }}>\n\t\t\t\t\t\t{this.props.right}\n\t\t\t\t\t</Right>\n\t\t\t\t</View>\n\t\t\t\t{this.renderMainContent()}\n\t\t\t</View>\n    );\n  }\n}\n\nconst styles = {\n  container: {\n\t\t// As of RN 0.29 flex: 1 is causing all rows to be the same height\n\t\t// flex: 1\n  },\n  hidden: {\n    bottom: 0,\n    left: 0,\n    overflow: \"hidden\",\n    position: \"absolute\",\n    right: 0,\n    top: 0,\n  },\n};\n\nconst StyledSwipeRow = connectStyle(\"NativeBase.SwipeRow\", {}, mapPropsToStyleNames)(SwipeRow);\nexport { StyledSwipeRow as SwipeRow };\n"]}