{"version":3,"sources":["../../../src/basic/Textarea.js"],"names":["Textarea","textarea","height","props","rowSpan","defaultProps","style","getStyle","_textInput","c","_root","prepareRootProps","placeholderTextColor","variables","inputColorPlaceholder","disabled","Component","propTypes","TextInput","PropTypes","oneOfType","object","number","array","bordered","bool","underline","StyledTextarea","mapPropsToStyleNames"],"mappings":"21BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,qD,iDACA,mD,yDACA,mE,68BAEMA,S,6RACO,CACT,MAAO,CACLC,SAAU,CACRC,OAAQ,KAAKC,KAAL,CAAWC,OAAX,CAAqB,KAAKD,KAAL,CAAWC,OAAX,CAAqB,EAA1C,CAA+C,EAD/C,CADL,CAAP,CAKD,C,2DAEkB,CACjB,GAAMC,cAAe,CACnBC,MAAO,KAAKC,QAAL,GAAgBN,QADJ,CAArB,CAGA,MAAO,2BAAa,KAAKE,KAAlB,CAAyBE,YAAzB,CAAP,CACD,C,uCACQ,iBACP,MACD,+BAAC,sBAAD,WACC,IAAK,eAAK,CACZ,OAAKG,UAAL,CAAkBC,CAAlB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAJE,EAKK,KAAKE,gBAAL,EALL,EAMC,cAND,CAOC,qBACC,KAAKR,KAAL,CAAWS,oBAAX,CAAkC,KAAKT,KAAL,CAAWS,oBAA7C,CAAoEC,mBAAUC,qBARhF,CAUC,sBAAsB,eAVvB,CAWC,SAAU,KAAKX,KAAL,CAAWY,QAAX,CAAsB,KAAtB,CAA8B,IAXzC,kDADC,CAeD,C,sBA/BoBC,gB,EAkCvBhB,SAASiB,SAAT,aACKC,uBAAUD,SADf,EAEEX,MAAOa,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAFT,CAGEnB,QAASe,oBAAUG,MAHrB,CAIEE,SAAUL,oBAAUM,IAJtB,CAKEC,UAAWP,oBAAUM,IALvB,GAQA,GAAME,gBAAiB,yCAAa,qBAAb,CAAoC,EAApC,CAAwCC,8BAAxC,EAA8D5B,QAA9D,CAAvB,C,QAE2BA,Q,CAAlB2B,c","file":"Textarea.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextInput } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variables from \"../theme/variables/platform\";\nimport computeProps from \"../utils/computeProps\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\n\nclass Textarea extends Component {\n  getStyle() {\n    return {\n      textarea: {\n        height: this.props.rowSpan ? this.props.rowSpan * 25 : 60,\n      },\n    };\n  }\n\n  prepareRootProps() {\n    const defaultProps = {\n      style: this.getStyle().textarea,\n    };\n    return computeProps(this.props, defaultProps);\n  }\n  render() {\n    return (\n\t\t\t<TextInput\n\t\t\t\tref={c => {\n  this._textInput = c;\n  this._root = c;\n}}\n\t\t\t\t{...this.prepareRootProps()}\n\t\t\t\tmultiline\n\t\t\t\tplaceholderTextColor={\n\t\t\t\t\tthis.props.placeholderTextColor ? this.props.placeholderTextColor : variables.inputColorPlaceholder\n\t\t\t\t}\n\t\t\t\tunderlineColorAndroid=\"rgba(0,0,0,0)\"\n\t\t\t\teditable={this.props.disabled ? false : true}\n\t\t\t/>\n    );\n  }\n}\n\nTextarea.propTypes = {\n  ...TextInput.propTypes,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n  rowSpan: PropTypes.number,\n  bordered: PropTypes.bool,\n  underline: PropTypes.bool,\n};\n\nconst StyledTextarea = connectStyle(\"NativeBase.Textarea\", {}, mapPropsToStyleNames)(Textarea);\n\nexport { StyledTextarea as Textarea };\n"]}