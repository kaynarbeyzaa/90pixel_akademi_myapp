{"version":3,"sources":["../../../src/basic/Input.js"],"names":["Input","variables","context","theme","variable","_textInput","c","_root","props","disabled","placeholderTextColor","inputColorPlaceholder","NativeBaseComponent","propTypes","TextInput","style","PropTypes","oneOfType","object","number","array","StyledInput","mapPropsToStyleNames"],"mappings":"q1BAAA,4B,2CACA,qC,mDACA,yCACA,iEACA,qD,iDACA,mE,yEACA,gE,48BAEMA,M,2RACK,iBACP,GAAMC,WAAY,KAAKC,OAAL,CAAaC,KAAb,CACjB,KAAKD,OAAL,CAAaC,KAAb,CAAmB,4BAAnB,EAAiDF,SADhC,CAEjBG,kBAFD,CAGA,MACD,+BAAC,sBAAD,WACC,IAAK,eAAK,CACZ,OAAKC,UAAL,CAAkBC,CAAlB,CACA,OAAKC,KAAL,CAAaD,CAAb,CACD,CAJE,CAKC,SAAU,KAAKE,KAAL,CAAWC,QAAX,CAAsB,KAAtB,CAA8B,IALzC,CAMC,sBAAsB,eANvB,CAOC,qBACC,KAAKD,KAAL,CAAWE,oBAAX,CAAkC,KAAKF,KAAL,CAAWE,oBAA7C,CAAoET,UAAUU,qBARhF,EAUK,KAAKH,KAVV,mDADC,CAcD,C,mBAnBiBI,6B,EAsBpBZ,MAAMa,SAAN,aACKC,uBAAUD,SADf,EAEEE,MAAOC,oBAAUC,SAAV,CAAoB,CAACD,oBAAUE,MAAX,CAAmBF,oBAAUG,MAA7B,CAAqCH,oBAAUI,KAA/C,CAApB,CAFT,GAKA,GAAMC,aAAc,yCAAa,kBAAb,CAAiC,EAAjC,CAAqCC,8BAArC,EAA2DtB,KAA3D,CAApB,C,QAEwBA,K,CAAfqB,W","file":"Input.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { TextInput } from \"react-native\";\nimport { connectStyle } from \"native-base-shoutem-theme\";\nimport variable from \"../theme/variables/platform\";\nimport mapPropsToStyleNames from \"../utils/mapPropsToStyleNames\";\nimport NativeBaseComponent from \"./Base/NativeBaseComponent\";\n\nclass Input extends NativeBaseComponent {\n  render() {\n    const variables = this.context.theme\n\t\t\t? this.context.theme[\"@@shoutem.theme/themeStyle\"].variables\n\t\t\t: variable;\n    return (\n\t\t\t<TextInput\n\t\t\t\tref={c => {\n  this._textInput = c;\n  this._root = c;\n}}\n\t\t\t\teditable={this.props.disabled ? false : true}\n\t\t\t\tunderlineColorAndroid=\"rgba(0,0,0,0)\"\n\t\t\t\tplaceholderTextColor={\n\t\t\t\t\tthis.props.placeholderTextColor ? this.props.placeholderTextColor : variables.inputColorPlaceholder\n\t\t\t\t}\n\t\t\t\t{...this.props}\n\t\t\t/>\n    );\n  }\n}\n\nInput.propTypes = {\n  ...TextInput.propTypes,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number, PropTypes.array]),\n};\n\nconst StyledInput = connectStyle(\"NativeBase.Input\", {}, mapPropsToStyleNames)(Input);\n\nexport { StyledInput as Input };\n"]}